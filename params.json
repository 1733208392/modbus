{"name":"Modbus","tagline":"Fault-tolerant implementation of modbus protocol in Go (golang)","body":"go modbus\r\n=========\r\n[![Build Status](https://travis-ci.org/goburrow/modbus.svg?branch=master)](https://travis-ci.org/goburrow/modbus)\r\n\r\nFault-tolerant, fail-fast implementation of Modbus protocol in Go.\r\n\r\nIncubating - do not use in production yet (more testing needed).\r\n\r\nSupported functions\r\n-------------------\r\nBit access:\r\n*   Read Discrete Inputs\r\n*   Read Coils\r\n*   Write Single Coil\r\n*   Write Multiple Coils\r\n\r\n16-bit access:\r\n*   Read Input Registers\r\n*   Read Holding Registers\r\n*   Write Single Register\r\n*   Write Multiple Registers\r\n*   Read/Write Multiple Registers\r\n*   Mask Write Register\r\n*   Read FIFO Queue\r\n\r\nSupported formats\r\n-----------------\r\n*   TCP\r\n*   Serial (RTU, ASCII) - Linux only\r\n\r\nUsage\r\n-----\r\nBasic usage:\r\n```go\r\n// Modbus TCP\r\nclient := modbus.TCPClient(\"localhost:502\")\r\n// Read input register 9\r\nresults, err := client.ReadInputRegisters(8, 1)\r\n\r\n// Modbus RTU/ASCII\r\n// Default configuration is 19200, 8, 1, even\r\nclient = modbus.RTUClient(\"/dev/ttyS0\")\r\nresults, err = client.ReadCoils(2, 1)\r\n```\r\n\r\nAdvanced usage:\r\n```go\r\n// Modbus TCP\r\nvar handler modbus.TCPClientHandler\r\nhandler.Address = \"localhost:502\"\r\nhandler.Timeout = 10 * time.Second\r\nhandler.SlaveId = 0xFF\r\nhandler.Logger = log.New(os.Stdout, \"test: \", log.LstdFlags)\r\n// Connect manually so that multiple requests are handled in one connection session\r\nerr := handler.Connect()\r\ndefer handler.Close()\r\n\r\nclient := modbus.TCPClientWithHandler(&handler)\r\nresults, err := client.ReadDiscreteInputs(15, 2)\r\nresults, err = client.WriteMultipleRegisters(1, 2, []byte{0, 3, 0, 4})\r\nresults, err = client.WriteMultipleCoils(5, 10, []byte{4, 3})\r\n```\r\n\r\n```go\r\n// Modbus RTU/ASCII\r\nvar handler modbus.RTUClientHandler\r\nhandler.Address = \"/dev/ttyUSB0\"\r\nhandler.BaudRate = 115200\r\nhandler.CharSize = 8\r\nhandler.Parity = \"N\"\r\nhandler.StopBits = 1\r\nhandler.SlaveId = 1\r\nhandler.Timeout = 5 * time.Second\r\n\r\nerr := handler.Connect()\r\ndefer handler.Close()\r\n\r\nclient := modbus.RTUClientWithHandler(&handler)\r\nresults, err := client.ReadDiscreteInputs(15, 2)\r\n```\r\n\r\nReferences\r\n----------\r\n-   [Modbus Specifications and Implementation Guides](http://www.modbus.org/specs.php)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}